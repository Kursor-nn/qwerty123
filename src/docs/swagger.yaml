openapi: 3.0.3
info:
  title: Qwerty123 Controller
  description: Sync API Description
  version: "0.0.1"
servers:
  - url: http://localhost:80/
    description: local server
  - url: http://demo.kozachuk.tech:80/
    description: demo server

tags:
  - name: user
    description: User Info
  - name: validation
    description: Analyze text
paths:
  /api/user/register:
    post:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: register user
      operationId: get
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        200:
          description: device info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        403:
          $ref: '#/components/responses/ForbiddenError'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/ServerError'
  /api/user/signin:
    post:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: signin user
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequest"
      responses:
        200:
          description: device info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        403:
          $ref: '#/components/responses/ForbiddenError'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/ServerError'
  /api/user/profile:
    get:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: get profile configuration
      operationId: get
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequest"
      responses:
        200:
          description: profile info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileInfo"
        403:
          $ref: '#/components/responses/ForbiddenError'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/ServerError'
  /api/user/profile/feature:
    post:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: toggle feature
      operationId: post
      responses:
        200:
          description: toggle feature
        403:
          $ref: '#/components/responses/ForbiddenError'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/ServerError'

  /api/guard/validate:
    post:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: toggle feature
      operationId: post
      responses:
        200:
          description: toggle feature
        403:
          $ref: '#/components/responses/ForbiddenError'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/ServerError'
components:
  responses:
    UnauthorizedError:
      description: Токен доступа отсутсвует или не правильный
    BadRequestError:
      description: Не удалось разобрать запрос
    ForbiddenError:
      description: У пользователя нет доступа к операции
    ServerError:
      description: Ошибка Сервера
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    id:
      in: path
      name: id
      schema:
        type: integer
      required: true
      description: object id
  schemas:
    NewUser:
      type: object
      properties:
        login:
          type: string
          example: "test"
        email:
          type: string
          example: "test@test.com"
        password:
          type: string
          example: "qwerty123"
    SigninRequest:
      type: object
      properties:
        login:
          type: string
          example: "test"
        password:
          type: string
          example: "qwerty123"
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "test"
        token_type:
          type: string
          example: "qwerty123"
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "success registration"
    UserFeatureDto:
      type: object
      properties:
        feature_type_id:
          type: number
          example: "1"
        name:
          type: string
          example: "Request Topic Filter"
        type:
          type: number
          example: 1
        enabled:
          type: boolean
          example: true
        config:
          type: string
          example: "{'values': 123}"
    ProfileInfo:
      type: object
      properties:
        username:
          type: string
          example: "test"
        features:
          type: array
          items:
            $ref: "#/components/schemas/UserFeatureDto"
    FeatureToggleDto:
      type: object
      properties:
        feature_type_id:
          type: number
          example: 1
        value:
          type: bool
          example: false
        chat_name:
          type: string
          example: "amaing-topic-id"
    InputTextDto:
      type: object
      properties:
        text:
          type: string
          example: "some text to check =)"
    FilterResultDto:
      type: object
      properties:
        is_toxic:
          type: boolean
          example: false
        details:
          type: object
          example: { "check1": false }
    ValidationResultsDto:
      type: object
      properties:
        is_toxic:
          type: boolean
          example: false
        question:
          type: string
          example: "Привет! Как дела? =))"
        llm_answer:
          type: string
          example: "Привет! Хорошо. А у вас как?"
        input_validation:
          type: array
          items:
            $ref: "#/components/schemas/FilterResultDto"
        answer_validation:
          type: array
          items:
            $ref: "#/components/schemas/FilterResultDto"


security:
  - bearerAuth: [ ]